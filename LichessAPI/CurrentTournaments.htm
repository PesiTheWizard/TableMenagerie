<html>
<head>
<title>Current tournaments - Lichess API
</title>
<script>
function GetPublicTournaments(ClBt)
{
	ClBt.disabled = true;
	const OGresp = document.getElementById("stts");
	const HL = document.getElementById("hdrs");
	const svr = document.getElementById("svar");
	const TB = document.getElementById("st");
	const DchkAL = document.getElementById("chkAL");
	const DtxtAL = document.getElementById("txtAL");
	if( (OGresp===null)||(HL===null)||(svr===null)||(TB===null)||(DchkAL===null)||(DtxtAL===null) )
	{
		console.log("getElementById fail");
		return;
	}
	const NA = "N/A";
	const hAL = DchkAL.checked?{'headers':{'Accept-Language':DtxtAL.value.trim()}}:{};
	OGresp.innerText = "Fetching tournament data...";
	svr.innerText = "Waiting for response...";
	const TS1 = Date.now();
	fetch("https://lichess.org/api/tournament",hAL).then((response) => {
		OGresp.innerText = "Response code = ".concat(response.status);
		for(let [k,v] of response.headers){lister(`${k} : ${v}`,HL,'li');}
		return response.json();
	}).then((response) => {
		const TS = Date.now();
		const rcats = Object.keys(response);
		for(let i=0;i<rcats.length;i++)
		{
			const currPrt = response[rcats[i]];
			for(let j=0;j<currPrt.length;j++)
			{
				const CT = currPrt[j];
				const tabRw = document.createElement('tr');
				lister(rcats[i],tabRw,'td');
				lister(CT["id"]??"",tabRw,'td');
				lister(CT["createdBy"]??"",tabRw,'td');
				lister(CT["system"]??"",tabRw,'td');
				lister(CT["minutes"]??"",tabRw,'td');
				lister(CT["clock"]?(CT["clock"]["limit"]??""):NA,tabRw,'td');
				lister(CT["clock"]?(CT["clock"]["increment"]??""):NA,tabRw,'td');
				lister(CT["rated"]??"",tabRw,'td');
				lister(CT["fullName"]??"",tabRw,'td');
				lister(CT["nbPlayers"]??"",tabRw,'td');
				lister(CT["variant"]?(CT["variant"]["name"]??""):NA,tabRw,'td');
				lister(CT["startsAt"]??"",tabRw,'td');
				lister(CT["startsAt"]?(new Date(CT["startsAt"]).toLocaleDateString()):"",tabRw,'td');
				lister(CT["startsAt"]?(new Date(CT["startsAt"]).toLocaleTimeString()):"",tabRw,'td');
				lister(CT["finishesAt"]??"",tabRw,'td');
				lister(CT["finishesAt"]?(new Date(CT["finishesAt"]).toLocaleDateString()):"",tabRw,'td');
				lister(CT["finishesAt"]?(new Date(CT["finishesAt"]).toLocaleTimeString()):"",tabRw,'td');
				lister(CT["status"]??"",tabRw,'td');
				lister(CT["perf"]?(CT["perf"]["name"]??""):NA,tabRw,'td');
				lister(CT["perf"]?(CT["perf"]["position"]??""):NA,tabRw,'td');
				lister(CT["perf"]?(CT["perf"]["icon"]??""):NA,tabRw,'td');
				lister(CT["secondsToStart"]??"",tabRw,'td');
				lister(CT["hasMaxRating"]??"",tabRw,'td');
				lister(CT["maxRating"]?.["rating"]??"",tabRw,'td');
				lister(CT["minRatedGames"]?"yes":"no",tabRw,'td');
				lister(CT["minRatedGames"]?.["nb"]??"",tabRw,'td');
				lister(CT["position"]?"yes":"no",tabRw,'td');
				lister(CT["position"]?.["eco"]??"",tabRw,'td');
				lister(CT["schedule"]?(CT["schedule"]["freq"]??""):NA,tabRw,'td');
				lister(CT["schedule"]?(CT["schedule"]["speed"]??""):NA,tabRw,'td');
				lister(CT["winner"]?.["id"]??"",tabRw,'td');
				lister(CT["winner"]?.["title"]??"",tabRw,'td');
				TB.appendChild(tabRw);
			}
		}
		return TS;
	}).then((TS2) => {
		svr.innerText = "JSON response received in ".concat((TS2-TS1)/1000," seconds");
	}).catch((error) => {
		console.log(error);
	});
}
function lister(listedText, ParntNde, ElType)
{
	const listEntry = document.createElement(ElType);
	const entryText = document.createTextNode(listedText);
	listEntry.appendChild(entryText);
	ParntNde.appendChild(listEntry);
}
function a(ctsb, lth)
{//ctsb - column to sort by, lth - low to high
	const gt = document.getElementById("st").childNodes;
	const tl = gt.length;//total length, stop if cup reaches this
	let cup = 1;//start at 1 so you know there's one below
	let fn, sn, s1, s2;//firstnode, secondnode; the nodes are tr-s
	while(cup < tl)//a list of 1 is already sorted
	{//trying insertionsort
		fn = gt[cup];
		sn = gt[cup-1];
		s1 = fn.childNodes[ctsb].textContent;
		s2 = sn.childNodes[ctsb].textContent;
		if((s1 != s2) && ((s1 < s2) == lth))//if the latter one is less, but should be ascending...
		{//we have reason to enter the inner loop
			//fn is the one who will eventually be moved
			let scout = cup-2;//fn was already compared to the one just below it so step back 2 spots at least
			let rearguard = cup-1;
			let sign;
			while(scout >= 0)
			{
				sign = gt[scout].childNodes[ctsb].textContent;
				if((s1 == sign) || (s1 < sign) != lth)//found the proper place
				{
					break;
				}
				else//we have to go further to find the proper place
				{
					scout--;
					rearguard--;
				}
			}
			//fn's position should be between scout and rearguard. Scout might be -1 but rearguard will always be at least 0
			gt[rearguard].before(fn);
		}
		cup++;
	}
}
</script>
<style>
input
{
	margin-top:1px;
	margin-bottom:1px;
}
td,th
{
	white-space: nowrap;
}
span
{
	cursor: pointer;
}
</style>
</head>
<body>
<input type=checkbox id="chkAL">Accept-Language:<input type=text id="txtAL" value="en" maxlength=127><br>
<input type=button value="Get public tournaments" onClick=GetPublicTournaments(this)>
<hr>
<div id="stts"></div>
<ul id="hdrs"></ul>
<div id="svar"></div>
<table border=1>
<thead><tr><th colspan=5></th><th colspan=2>clock</th><th colspan=3></th><th>variant</th>
<th colspan=3>startsAt</th><th colspan=3>finishesAt</th><th></th><th colspan=3>perf</th>
<th></th><th colspan=2>maxRating</th><th colspan=2>minRatedGames</th>
<th colspan=2>position</th><th colspan=2>schedule</th><th colspan=2>winner</th>
</tr><tr>
<th>Group</th><th>id</th><th>createdBy</th>
<th>system</th><th>minutes</th>
<th>lim</th><th>incr</th>
<th>rated</th>
<th>fullName</th>
<th>nbPlayers</th>
<th>name</th>
<th>(timestamp)</th><th>(Date)</th><th>(Time)</th>
<th>(timestamp)</th><th>(Date)</th><th>(Time)</th>
<th>status</th>
<th>name</th>
<th>pos</th>
<th>icon</th>
<th>secondsToStart</th>
<th>has</th><th>rating</th>
<th>?</th><th>nb</th>
<th>?</th><th>eco</th>
<th>freq</th><th>speed</th>
<th>id</th>
<th>title</th>
</tr><tr>
<th><span onClick=a(0,true)>&#9650;</span> <span onClick=a(0,false)>&#9660;</span></th>
<th><span onClick=a(1,true)>&#9650;</span> <span onClick=a(1,false)>&#9660;</span></th>
<th><span onClick=a(2,true)>&#9650;</span> <span onClick=a(2,false)>&#9660;</span></th>
<th><span onClick=a(3,true)>&#9650;</span> <span onClick=a(3,false)>&#9660;</span></th>
<th><span onClick=a(4,true)>&#9650;</span> <span onClick=a(4,false)>&#9660;</span></th>
<th><span onClick=a(5,true)>&#9650;</span> <span onClick=a(5,false)>&#9660;</span></th>
<th><span onClick=a(6,true)>&#9650;</span> <span onClick=a(6,false)>&#9660;</span></th>
<th><span onClick=a(7,true)>&#9650;</span> <span onClick=a(7,false)>&#9660;</span></th>
<th><span onClick=a(8,true)>&#9650;</span> <span onClick=a(8,false)>&#9660;</span></th>
<th><span onClick=a(9,true)>&#9650;</span> <span onClick=a(9,false)>&#9660;</span></th>
<th><span onClick=a(10,true)>&#9650;</span> <span onClick=a(10,false)>&#9660;</span></th>
<th><span onClick=a(11,true)>&#9650;</span> <span onClick=a(11,false)>&#9660;</span></th>
<th><span onClick=a(12,true)>&#9650;</span> <span onClick=a(12,false)>&#9660;</span></th>
<th><span onClick=a(13,true)>&#9650;</span> <span onClick=a(13,false)>&#9660;</span></th>
<th><span onClick=a(14,true)>&#9650;</span> <span onClick=a(14,false)>&#9660;</span></th>
<th><span onClick=a(15,true)>&#9650;</span> <span onClick=a(15,false)>&#9660;</span></th>
<th><span onClick=a(16,true)>&#9650;</span> <span onClick=a(16,false)>&#9660;</span></th>
<th><span onClick=a(17,true)>&#9650;</span> <span onClick=a(17,false)>&#9660;</span></th>
<th><span onClick=a(18,true)>&#9650;</span> <span onClick=a(18,false)>&#9660;</span></th>
<th><span onClick=a(19,true)>&#9650;</span> <span onClick=a(19,false)>&#9660;</span></th>
<th><span onClick=a(20,true)>&#9650;</span> <span onClick=a(20,false)>&#9660;</span></th>
<th><span onClick=a(21,true)>&#9650;</span> <span onClick=a(21,false)>&#9660;</span></th>
<th><span onClick=a(22,true)>&#9650;</span> <span onClick=a(22,false)>&#9660;</span></th>
<th><span onClick=a(23,true)>&#9650;</span> <span onClick=a(23,false)>&#9660;</span></th>
<th><span onClick=a(24,true)>&#9650;</span> <span onClick=a(24,false)>&#9660;</span></th>
<th><span onClick=a(25,true)>&#9650;</span> <span onClick=a(25,false)>&#9660;</span></th>
<th><span onClick=a(26,true)>&#9650;</span> <span onClick=a(26,false)>&#9660;</span></th>
<th><span onClick=a(27,true)>&#9650;</span> <span onClick=a(27,false)>&#9660;</span></th>
<th><span onClick=a(28,true)>&#9650;</span> <span onClick=a(28,false)>&#9660;</span></th>
<th><span onClick=a(29,true)>&#9650;</span> <span onClick=a(29,false)>&#9660;</span></th>
<th><span onClick=a(30,true)>&#9650;</span> <span onClick=a(30,false)>&#9660;</span></th>
<th><span onClick=a(31,true)>&#9650;</span> <span onClick=a(31,false)>&#9660;</span></th>
</tr></thead>
<tbody id="st"></tbody>
</table>
</body>
</html>
