<html>
<head>
<title>Online bots, detailed, ridiculous - Lichess API</title>
<script>
function initialGet(clbt)
{
	"use strict";
	clbt.disabled = true;
	const DlogA = document.getElementById("logA");
	const t = document.getElementById("NofBotsToGet").value;
	const tv = parseInt(t);
	if(tv>=1)
	{
		const siteDiffs = [
			{//Lichess
				"perflist":["bullet","blitz","rapid","classical","correspondence","chess960","crazyhouse","antichess","atomic","horde","kingOfTheHill","racingKings","threeCheck","puzzle"],
				"perfoptn":[false,   false,  false,  false,      false,           true,      true,        true,       true,    true,   true,           true,         true,        true],
				"profile":["location","bio","rcfRating","flag","dsbRating","fideRating","ecfRating","uscfRating","realName","cfcRating","links"]
			},
			{//Lishogi
				"perflist":["bullet","blitz","rapid","classical","correspondence","ultraBullet","chushogi","minishogi","kyotoshogi","annanshogi","checkshogi"],
				"perfoptn":[false,   false,  false,  false,      false,           true,         true,      true,       true,        true,        true],
				"profile":["location","bio","firstName","lastName","country","links"]
			}
		];//at some point I want to include the lishogi option and have the table headers build themselves accordingly.
		const OGresp = document.getElementById("stts");
		const HL = document.getElementById("hdrs");
		const svr = document.getElementById("svar");
		const gt = document.getElementById("st");//the tbody into which the processed response goes; called t henceforth
		DlogA.innerText = `Fetching data of ${tv} bot${tv===1?"":"s"}`;
		OGresp.innerText = "Preparing...";
		HL.innerHTML = "";
		svr.innerText = "Waiting for response...";
		fetchHandler(`https://lichess.org/api/bot/online?nb=${tv}`,OGresp,HL,svr,gt,DlogA,siteDiffs[0]);
	}
	else
	{
		DlogA.innerText = `${tv} is not at least 1`;
		clbt.disabled = false;
	}
}
async function fetchHandler(endPointString,statusHolder,headerHolder,netLogger,t,LogA,diffObj)
{
	statusHolder.innerText = "Making request...";
	const TS1 = Date.now();
	const response = await fetch(endPointString);
	statusHolder.innerText = "Response code = ".concat(response.status);
	for(let [k,v] of response.headers){lister(`${k} : ${v}`,headerHolder,'li');}
	const reader = response.body.pipeThrough(new TextDecoderStream()).getReader();
	const TS2 = Date.now();
	let ChCt = 0;//chunk-count
	const reps = ["",0,0,0,0,0];//pile of unparsables and statistics reports
	netLogger.innerText = "Reading response...";
	while(true)
	{
		const {value,done} = await reader.read();//typeof(value) is string
		if(done){break;}
		textToJSONhandler(value.trim(),t,reps,diffObj);
		ChCt++;
	}
	LogA.innerText = "Fetched ".concat(endPointString," in ",(TS2-TS1)/1000," sec.");
	const brokenLines = reps[1];
	if(brokenLines===0)
	{
		netLogger.innerText = `Response fully received in ${ChCt} chunk${ChCt==1?"":"s"}. (${reps[5]} line${reps[5]==1?"":"s"} parsed)`;
	}
	else
	{
		netLogger.innerText = `Response received in ${ChCt} chunk${ChCt==1?"":"s"} with ${brokenLines} broken line${brokenLines==1?"":"s"}; ${reps[2]} of which salvaged into ${reps[3]} whole one${reps[3]==1?"":"s"}, ${reps[4]} discarded. (${reps[5]} line${reps[5]==1?"":"s"} parsed)`;
	}
	if(reps[4]!=0)
	{
		console.log("Discarded string-pile:\n".concat(reps[0]));
	}
}
function lister(listedText, PN, ElType)
{
	const listEntry = document.createElement(ElType);
	const entryText = document.createTextNode(listedText);
	listEntry.appendChild(entryText);
	PN.appendChild(listEntry);
}
function textToJSONhandler(stuff,t,als,arrObj)
{
	const conveyorBelt = stuff.split("\n");
	let jp;
	let fs = false;//failstep
	for(let i=0;i<conveyorBelt.length;i++)
	{
		fs = false;
		try
		{
			jp = JSON.parse(conveyorBelt[i].trim());
		}
		catch(e)
		{
			als[1]++;//broken lines counter
			als[0] = als[0].concat(conveyorBelt[i]);//the pile of broken lines
			als[4]++;//number of lines currently making up the pile
			fs = true;
		}
		if(fs)
		{//we're here because the single-line parse job failed
			try
			{
				jp = JSON.parse(als[0].trim());
			}
			catch(e)
			{
				continue;
			}
			//secondary parse didn't error out, so we're back on track
			als[0] = "";
			als[2]+=als[4];//running total of how many broken lines were salvaged
			als[3]++;//how many whole lines were made from the broken parts
			als[4]=0;
		}
		makeTableEntry(jp,t,arrObj);
		als[5]++;//parsed lines counter
	}
}
function makeTableEntry(JO,tableElem,listObj)
{
	const NA = "N/A";
	const tablRw = document.createElement('tr');
	lister(JO["id"]??"",tablRw,'td');
	lister(JO["username"]??"",tablRw,'td');
	lister(JO["perfs"]?(Object.keys(JO["perfs"]).length):NA,tablRw,'td');
	const perflist = listObj["perflist"];
	const perfoptn = listObj["perfoptn"];
	for(let i=0;i<perflist.length;i++)
	{
		perfshelper(perflist[i],perfoptn[i]);
	}
	datehelper("createdAt");
	datehelper("seenAt");
	lister(JO["playTime"]?(JO["playTime"]["total"]??""):NA,tablRw,'td');
	lister(JO["playTime"]?(JO["playTime"]["tv"]??""):NA,tablRw,'td');
	blisthelper("profile",listObj["profile"]);
	lister(JO["title"]??"",tablRw,'td');
	lister(JO["flair"]?"yes":"no",tablRw,'td');
	lister(JO["patron"]??"",tablRw,'td');
	lister(JO["verified"]??"",tablRw,'td');
	//lister(JO["tosViolation"]??"",tablRw,'td');//these have been excluded from the bot list
	tableElem.appendChild(tablRw);
	function perfshelper(X,optnl)
	{
		if(optnl)
		{
			lister(JO["perfs"]?(JO["perfs"][X]?"yes":"no"):NA,tablRw,'td');
		}
		lister(JO["perfs"]?.[X]?.["games"]??"",tablRw,'td');
		lister(JO["perfs"]?.[X]?.["rating"]??"",tablRw,'td');
		lister(JO["perfs"]?.[X]?.["rd"]??"",tablRw,'td');
		lister(JO["perfs"]?.[X]?.["prog"]??"",tablRw,'td');
		lister(JO["perfs"]?.[X]?.["prov"]??"",tablRw,'td');
	}
	function datehelper(X)
	{
		const TS = new Date(JO[X]);
		lister(JO[X]??"",tablRw,'td');
		lister(JO[X]?(TS.toLocaleDateString()):"",tablRw,'td');
		lister(JO[X]?(TS.toLocaleTimeString()):"",tablRw,'td');
		lister(JO[X]?(TS.toUTCString()):"",tablRw,'td');
	}
	function blisthelper(T,A)
	{
		lister(JO[T]?(Object.keys(JO[T]).length):NA,tablRw,'td');
		for(let i=0;i<A.length;i++)
		{
			lister(JO[T]?(JO[T][A[i]]?"yes":"no"):NA,tablRw,'td');
		}
	}
}
function a(ctsb, lth)
{//ctsb - column to sort by, lth - low to high
	const gt = document.getElementById("st").childNodes;
	const tl = gt.length - 2;//total length, stop if cup goes above this
	let cup = 0;
	let fn, sn, s1, s2;//firstnode, secondnode; the nodes are tr-s
	while(cup <= tl)//gnomesorting the rows
	{
		fn = gt[cup];
		sn = gt[cup+1];
		s1 = fn.childNodes[ctsb].textContent;
		s2 = sn.childNodes[ctsb].textContent;
		if(s1 == s2)
		{
			cup++;
		}
		else if((s1 > s2) == lth)
		{
			fn.before(sn);//swap rows
			cup--;
			if(cup<0){cup=1;}
		}
		else
		{
			cup++;
		}
	}
}
</script>
<style>
td, th
{
	white-space: nowrap;
}
span
{
	cursor: pointer;
}
</style>
</head>
<body>
<input type=text id="NofBotsToGet" value="190"> <input type=button value="Get this many bots" onClick=initialGet(this)>
<div id="logA">Log space</div>
<hr>
<div id="stts"></div>
<ul id="hdrs"></ul>
<div id="svar"></div>
<table border=1>
<thead>
<tr><th colspan=3></th><th colspan=5>Bullet</th><th colspan=5>Blitz</th><th colspan=5>Rapid</th><th colspan=5>Classical</th><th colspan=5>Correspondence</th>
<th colspan=6>Chess960</th><th colspan=6>Crazyhouse</th><th colspan=6>antichess</th><th colspan=6>atomic</th><th colspan=6>horde</th><th colspan=6>kingOfTheHill</th><th colspan=6>racingKings</th><th colspan=6>threeCheck</th><th colspan=6>puzzle</th>
<th colspan=4>createdAt</th><th colspan=4>seenAt</th><th colspan=2>playTime</th><th colspan=12>profile</th></tr>
<tr><th>id</th><th>username</th><th>#perfs</th>
<th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>?</th><th>games</th><th>rating</th><th>rd</th><th>prog</th><th>prov</th>
<th>(Timestamp)</th><th>(Date)</th><th>(Time)</th><th>(UTC)</th>
<th>(Timestamp)</th><th>(Date)</th><th>(Time)</th><th>(UTC)</th>
<th>total</th><th>tv</th>
<th>#</th><th>location</th><th>bio</th><th>rcfRating</th><th>flag</th><th>dsbRating</th><th>fideRating</th><th>ecfRating</th><th>uscfRating</th><th>realName</th><th>cfcRating</th><th>links</th>
<th>title</th><th>flair?</th><th>patron</th><th>verified</th></tr>
<tr>
<th><span onClick=a(0,true)>&#9650;</span> <span onClick=a(0,false)>&#9660;</span></th>
<th><span onClick=a(1,true)>&#9650;</span> <span onClick=a(1,false)>&#9660;</span></th>
<th><span onClick=a(2,true)>&#9650;</span> <span onClick=a(2,false)>&#9660;</span></th>
<th><span onClick=a(3,true)>&#9650;</span> <span onClick=a(3,false)>&#9660;</span></th>
<th><span onClick=a(4,true)>&#9650;</span> <span onClick=a(4,false)>&#9660;</span></th>
<th><span onClick=a(5,true)>&#9650;</span> <span onClick=a(5,false)>&#9660;</span></th>
<th><span onClick=a(6,true)>&#9650;</span> <span onClick=a(6,false)>&#9660;</span></th>
<th><span onClick=a(7,true)>&#9650;</span> <span onClick=a(7,false)>&#9660;</span></th>
<th><span onClick=a(8,true)>&#9650;</span> <span onClick=a(8,false)>&#9660;</span></th>
<th><span onClick=a(9,true)>&#9650;</span> <span onClick=a(9,false)>&#9660;</span></th>
<th><span onClick=a(10,true)>&#9650;</span> <span onClick=a(10,false)>&#9660;</span></th>
<th><span onClick=a(11,true)>&#9650;</span> <span onClick=a(11,false)>&#9660;</span></th>
<th><span onClick=a(12,true)>&#9650;</span> <span onClick=a(12,false)>&#9660;</span></th>
<th><span onClick=a(13,true)>&#9650;</span> <span onClick=a(13,false)>&#9660;</span></th>
<th><span onClick=a(14,true)>&#9650;</span> <span onClick=a(14,false)>&#9660;</span></th>
<th><span onClick=a(15,true)>&#9650;</span> <span onClick=a(15,false)>&#9660;</span></th>
<th><span onClick=a(16,true)>&#9650;</span> <span onClick=a(16,false)>&#9660;</span></th>
<th><span onClick=a(17,true)>&#9650;</span> <span onClick=a(17,false)>&#9660;</span></th>
<th><span onClick=a(18,true)>&#9650;</span> <span onClick=a(18,false)>&#9660;</span></th>
<th><span onClick=a(19,true)>&#9650;</span> <span onClick=a(19,false)>&#9660;</span></th>
<th><span onClick=a(20,true)>&#9650;</span> <span onClick=a(20,false)>&#9660;</span></th>
<th><span onClick=a(21,true)>&#9650;</span> <span onClick=a(21,false)>&#9660;</span></th>
<th><span onClick=a(22,true)>&#9650;</span> <span onClick=a(22,false)>&#9660;</span></th>
<th><span onClick=a(23,true)>&#9650;</span> <span onClick=a(23,false)>&#9660;</span></th>
<th><span onClick=a(24,true)>&#9650;</span> <span onClick=a(24,false)>&#9660;</span></th>
<th><span onClick=a(25,true)>&#9650;</span> <span onClick=a(25,false)>&#9660;</span></th>
<th><span onClick=a(26,true)>&#9650;</span> <span onClick=a(26,false)>&#9660;</span></th>
<th><span onClick=a(27,true)>&#9650;</span> <span onClick=a(27,false)>&#9660;</span></th>
<th><span onClick=a(28,true)>&#9650;</span> <span onClick=a(28,false)>&#9660;</span></th>
<th><span onClick=a(29,true)>&#9650;</span> <span onClick=a(29,false)>&#9660;</span></th>
<th><span onClick=a(30,true)>&#9650;</span> <span onClick=a(30,false)>&#9660;</span></th>
<th><span onClick=a(31,true)>&#9650;</span> <span onClick=a(31,false)>&#9660;</span></th>
<th><span onClick=a(32,true)>&#9650;</span> <span onClick=a(32,false)>&#9660;</span></th>
<th><span onClick=a(33,true)>&#9650;</span> <span onClick=a(33,false)>&#9660;</span></th>
<th><span onClick=a(34,true)>&#9650;</span> <span onClick=a(34,false)>&#9660;</span></th>
<th><span onClick=a(35,true)>&#9650;</span> <span onClick=a(35,false)>&#9660;</span></th>
<th><span onClick=a(36,true)>&#9650;</span> <span onClick=a(36,false)>&#9660;</span></th>
<th><span onClick=a(37,true)>&#9650;</span> <span onClick=a(37,false)>&#9660;</span></th>
<th><span onClick=a(38,true)>&#9650;</span> <span onClick=a(38,false)>&#9660;</span></th>
<th><span onClick=a(39,true)>&#9650;</span> <span onClick=a(39,false)>&#9660;</span></th>
<th><span onClick=a(40,true)>&#9650;</span> <span onClick=a(40,false)>&#9660;</span></th>
<th><span onClick=a(41,true)>&#9650;</span> <span onClick=a(41,false)>&#9660;</span></th>
<th><span onClick=a(42,true)>&#9650;</span> <span onClick=a(42,false)>&#9660;</span></th>
<th><span onClick=a(43,true)>&#9650;</span> <span onClick=a(43,false)>&#9660;</span></th>
<th><span onClick=a(44,true)>&#9650;</span> <span onClick=a(44,false)>&#9660;</span></th>
<th><span onClick=a(45,true)>&#9650;</span> <span onClick=a(45,false)>&#9660;</span></th>
<th><span onClick=a(46,true)>&#9650;</span> <span onClick=a(46,false)>&#9660;</span></th>
<th><span onClick=a(47,true)>&#9650;</span> <span onClick=a(47,false)>&#9660;</span></th>
<th><span onClick=a(48,true)>&#9650;</span> <span onClick=a(48,false)>&#9660;</span></th>
<th><span onClick=a(49,true)>&#9650;</span> <span onClick=a(49,false)>&#9660;</span></th>
<th><span onClick=a(50,true)>&#9650;</span> <span onClick=a(50,false)>&#9660;</span></th>
<th><span onClick=a(51,true)>&#9650;</span> <span onClick=a(51,false)>&#9660;</span></th>
<th><span onClick=a(52,true)>&#9650;</span> <span onClick=a(52,false)>&#9660;</span></th>
<th><span onClick=a(53,true)>&#9650;</span> <span onClick=a(53,false)>&#9660;</span></th>
<th><span onClick=a(54,true)>&#9650;</span> <span onClick=a(54,false)>&#9660;</span></th>
<th><span onClick=a(55,true)>&#9650;</span> <span onClick=a(55,false)>&#9660;</span></th>
<th><span onClick=a(56,true)>&#9650;</span> <span onClick=a(56,false)>&#9660;</span></th>
<th><span onClick=a(57,true)>&#9650;</span> <span onClick=a(57,false)>&#9660;</span></th>
<th><span onClick=a(58,true)>&#9650;</span> <span onClick=a(58,false)>&#9660;</span></th>
<th><span onClick=a(59,true)>&#9650;</span> <span onClick=a(59,false)>&#9660;</span></th>
<th><span onClick=a(60,true)>&#9650;</span> <span onClick=a(60,false)>&#9660;</span></th>
<th><span onClick=a(61,true)>&#9650;</span> <span onClick=a(61,false)>&#9660;</span></th>
<th><span onClick=a(62,true)>&#9650;</span> <span onClick=a(62,false)>&#9660;</span></th>
<th><span onClick=a(63,true)>&#9650;</span> <span onClick=a(63,false)>&#9660;</span></th>
<th><span onClick=a(64,true)>&#9650;</span> <span onClick=a(64,false)>&#9660;</span></th>
<th><span onClick=a(65,true)>&#9650;</span> <span onClick=a(65,false)>&#9660;</span></th>
<th><span onClick=a(66,true)>&#9650;</span> <span onClick=a(66,false)>&#9660;</span></th>
<th><span onClick=a(67,true)>&#9650;</span> <span onClick=a(67,false)>&#9660;</span></th>
<th><span onClick=a(68,true)>&#9650;</span> <span onClick=a(68,false)>&#9660;</span></th>
<th><span onClick=a(69,true)>&#9650;</span> <span onClick=a(69,false)>&#9660;</span></th>
<th><span onClick=a(70,true)>&#9650;</span> <span onClick=a(70,false)>&#9660;</span></th>
<th><span onClick=a(71,true)>&#9650;</span> <span onClick=a(71,false)>&#9660;</span></th>
<th><span onClick=a(72,true)>&#9650;</span> <span onClick=a(72,false)>&#9660;</span></th>
<th><span onClick=a(73,true)>&#9650;</span> <span onClick=a(73,false)>&#9660;</span></th>
<th><span onClick=a(74,true)>&#9650;</span> <span onClick=a(74,false)>&#9660;</span></th>
<th><span onClick=a(75,true)>&#9650;</span> <span onClick=a(75,false)>&#9660;</span></th>
<th><span onClick=a(76,true)>&#9650;</span> <span onClick=a(76,false)>&#9660;</span></th>
<th><span onClick=a(77,true)>&#9650;</span> <span onClick=a(77,false)>&#9660;</span></th>
<th><span onClick=a(78,true)>&#9650;</span> <span onClick=a(78,false)>&#9660;</span></th>
<th><span onClick=a(79,true)>&#9650;</span> <span onClick=a(79,false)>&#9660;</span></th>
<th><span onClick=a(80,true)>&#9650;</span> <span onClick=a(80,false)>&#9660;</span></th>
<th><span onClick=a(81,true)>&#9650;</span> <span onClick=a(81,false)>&#9660;</span></th>
<th><span onClick=a(82,true)>&#9650;</span> <span onClick=a(82,false)>&#9660;</span></th>
<th><span onClick=a(83,true)>&#9650;</span> <span onClick=a(83,false)>&#9660;</span></th>
<th><span onClick=a(84,true)>&#9650;</span> <span onClick=a(84,false)>&#9660;</span></th>
<th><span onClick=a(85,true)>&#9650;</span> <span onClick=a(85,false)>&#9660;</span></th>
<th><span onClick=a(86,true)>&#9650;</span> <span onClick=a(86,false)>&#9660;</span></th>
<th><span onClick=a(87,true)>&#9650;</span> <span onClick=a(87,false)>&#9660;</span></th>
<th><span onClick=a(88,true)>&#9650;</span> <span onClick=a(88,false)>&#9660;</span></th>
<th><span onClick=a(89,true)>&#9650;</span> <span onClick=a(89,false)>&#9660;</span></th>
<th><span onClick=a(90,true)>&#9650;</span> <span onClick=a(90,false)>&#9660;</span></th>
<th><span onClick=a(91,true)>&#9650;</span> <span onClick=a(91,false)>&#9660;</span></th>
<th><span onClick=a(92,true)>&#9650;</span> <span onClick=a(92,false)>&#9660;</span></th>
<th><span onClick=a(93,true)>&#9650;</span> <span onClick=a(93,false)>&#9660;</span></th>
<th><span onClick=a(94,true)>&#9650;</span> <span onClick=a(94,false)>&#9660;</span></th>
<th><span onClick=a(95,true)>&#9650;</span> <span onClick=a(95,false)>&#9660;</span></th>
<th><span onClick=a(96,true)>&#9650;</span> <span onClick=a(96,false)>&#9660;</span></th>
<th><span onClick=a(97,true)>&#9650;</span> <span onClick=a(97,false)>&#9660;</span></th>
<th><span onClick=a(98,true)>&#9650;</span> <span onClick=a(98,false)>&#9660;</span></th>
<th><span onClick=a(99,true)>&#9650;</span> <span onClick=a(99,false)>&#9660;</span></th>
<th><span onClick=a(100,true)>&#9650;</span> <span onClick=a(100,false)>&#9660;</span></th>
<th><span onClick=a(101,true)>&#9650;</span> <span onClick=a(101,false)>&#9660;</span></th>
<th><span onClick=a(102,true)>&#9650;</span> <span onClick=a(102,false)>&#9660;</span></th>
<th><span onClick=a(103,true)>&#9650;</span> <span onClick=a(103,false)>&#9660;</span></th>
<th><span onClick=a(104,true)>&#9650;</span> <span onClick=a(104,false)>&#9660;</span></th>
<th><span onClick=a(105,true)>&#9650;</span> <span onClick=a(105,false)>&#9660;</span></th>
<th><span onClick=a(106,true)>&#9650;</span> <span onClick=a(106,false)>&#9660;</span></th>
<th><span onClick=a(107,true)>&#9650;</span> <span onClick=a(107,false)>&#9660;</span></th>
</tr></thead>
<tbody id="st"></tbody>
</table>
</body>
</html>
